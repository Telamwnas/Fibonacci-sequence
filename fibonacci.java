class fibonacci {

  static double fbsq(double n) {

    double f[] = new double[(int)(n + 2)];
    double i;
    f[0] = 0;
    f[1] = 1;

    for (i = 2; i <= n; i++) {

      f[(int) i] = f[(int)(i - 1)] + f[(int)(i - 2)];
    }

    return f[(int) n];
  }

  public static void
  main(String args[])

  {
    System.out.print("------THE SEQUENSE IS------");

    double N = 10;

    for (double i = 0; i < N; i++)

      System.out.printf("\n" + (fbsq(i) + " "));

  }
}


//ΑΠΛΟ ΠΑΡΑΔΕΙΓΜΑ ΑΛΛΗΛΟΥΧΙΑΣ FIBONACCI

//ΓΙΑ ΑΥΞΟΜΕΙΩΣΗ ΤΗΣ ΤΙΜΗΣ ΚΑΙ ΚΑΤ'ΕΠΕΚΤΑΣΗ ΤΗΣ ΑΛΛΗΛΟΥΧΙΑΣ ΑΡΙΘΜΟΝ FIBONACCI ΔΙΑΤΡΕΞΤΕ ΣΤΗΝ ΓΡΑΜΜΗ 25 ΚΑΙ ΑΛΛΑΞΤΕ ΤΟΝ ΑΚΕΡΑΙΟ ΑΡΙΘΜΟ N=...

//ΜΑΘΗΜΑΤΙΚΗ ΦΟΡΜΟΥΛΑ F{n}=F{n-1}+F{n-2}
//                    ΟΠΟΥ F{0} = 0 ΚΑΙ F{1} = 1


//f1=1,f2=1,f3=2,f4=3,f5=5,f6=8,f7=13,f8=21,f9=34,f10=55,f11=89,f12=144,…

//F0={0}+1=1
//F1={1}+1=2                          
//F2={1}+2=3                          
//F3={2}+3=5                          
//F4={3}+5=8                          
//F5={5}+8=13                         
//F6={8}+13=21                        
//F7={13}+21=34                       
//F8={21}+34=55                      
//F9={34}+55=89                        
//F10={55}+89=144                         
//F11={89}+144=233                     
//F12={144}+233=377                    
//F13={233}+377=610                    
//F14={377}+610=987                     
//F15={610}+987=1597                
//F16={987}+1597=2584                 
//F17={1597}+2584=4181
//F18={2584}+4181=6765
//F19={4181}+6765=10946
//F20={6765}+10946=17711
